// üéØ api/modules/prompts.js - v8.3 - CORRE√á√ÉO EMERGENCIAL DE SINTAXE
// ESTRAT√âGIA: Implementa√ß√£o m√≠nima funcional para quebrar o ciclo de erros
// FOCO: Todas as fun√ß√µes implementadas, mesmo que b√°sicas

console.log("üéØ Prompts v8.3 - CORRE√á√ÉO EMERGENCIAL DE SINTAXE");

// ================================================================================
// üéØ FUN√á√ÉO PRINCIPAL - IMPLEMENTA√á√ÉO M√çNIMA
// ================================================================================

function gerarPromptOtimizado(formData, analise) {
  console.log("üéØ Gerando prompt otimizado v8.3...");
  
  if (!formData) {
    return gerarPromptFallback({});
  }
  
  try {
    // Contexto b√°sico
    const contexto = construirContexto(formData, analise || {});
    const estrategia = determinarEstrategia(analise || {});
    
    // Prompt espec√≠fico
    const tipoDetectado = analise?.tipoDetectado || 'generico';
    const promptEspecifico = selecionarPromptPorTipo(tipoDetectado, contexto, estrategia);
    
    console.log(`‚úÖ Prompt gerado: ${promptEspecifico.length} caracteres`);
    return promptEspecifico;
    
  } catch (error) {
    console.error("‚ùå Erro na gera√ß√£o do prompt:", error);
    return gerarPromptFallback(formData);
  }
}

// ================================================================================
// üèóÔ∏è CONSTRU√á√ÉO DE CONTEXTO B√ÅSICA
// ================================================================================

function construirContexto(formData, analise) {
  return {
    tipos: formData.tipos?.join(", ") || "Or√ßamento geral",
    observacoes: formData.observacoes || "",
    textoColado: formData.textoColado || "",
    destino: formData.destino || "Destino n√£o informado",
    
    // Dados da an√°lise (com fallbacks)
    tipoDetectado: analise.tipoDetectado || 'generico',
    confianca: analise.confiancaDeteccao || 0.8,
    complexidade: analise.complexidade || 'media',
    
    // Configura√ß√µes b√°sicas
    temImagem: !!formData.imagemBase64,
    adultos: formData.adultos || 1,
    criancas: formData.criancas || 0
  };
}

// ================================================================================
// ‚öôÔ∏è ESTRAT√âGIA B√ÅSICA
// ================================================================================

function determinarEstrategia(analise) {
  return {
    foco: 'formatacao_padrao',
    detalhamento: 'medio',
    validacao: 'padrao',
    modelo_recomendado: 'gpt-4o-mini'
  };
}

// ================================================================================
// üéØ SELE√á√ÉO DE PROMPT SIMPLIFICADA
// ================================================================================

function selecionarPromptPorTipo(tipoDetectado, contexto, estrategia) {
  console.log(`üéØ Selecionando prompt para tipo: ${tipoDetectado}`);
  
  // Prompts b√°sicos por tipo
  const prompts = {
    'aereo_nacional_simples': promptAereoNacionalSimples(contexto),
    'generico': promptGenerico(contexto)
  };
  
  return prompts[tipoDetectado] || prompts.generico;
}

// ================================================================================
// üìã PROMPTS ESPEC√çFICOS - IMPLEMENTA√á√ÉO B√ÅSICA
// ================================================================================

function promptAereoNacionalSimples(contexto) {
  return `OR√áAMENTO CVC ITAQUA - A√âREO NACIONAL v8.3

DADOS DA VIAGEM:
- Tipos: ${contexto.tipos}
- Destino: ${contexto.destino}
- Passageiros: ${contexto.adultos} adulto(s)${contexto.criancas > 0 ? `, ${contexto.criancas} crian√ßa(s)` : ''}
${contexto.observacoes ? `- Observa√ß√µes: ${contexto.observacoes}` : ''}

${contexto.textoColado ? `INFORMA√á√ïES COMPLEMENTARES:
${contexto.textoColado}` : ''}

FORMATO OBRIGAT√ìRIO:
*[COMPANHIA] - [ORIGEM] ‚úà [DESTINO]*
[DD/MM] - [ORIGEM_AEROPORTO] [HH:MM] / [DESTINO_AEROPORTO] [HH:MM] (voo direto)
--
[DD/MM] - [DESTINO_AEROPORTO] [HH:MM] / [ORIGEM_AEROPORTO] [HH:MM] (voo direto)

üí∞ [VALOR] para ${contexto.adultos} adulto(s)
üí≥ Em at√© 10x sem juros
‚úÖ S√≥ mala de m√£o inclu√≠da
üè∑Ô∏è N√£o reembols√°vel

REGRAS CR√çTICAS:
- Hor√°rios: "06:20" (NUNCA "06: 20")
- Aeroportos: CGH ‚Üí Congonhas, GRU ‚Üí Guarulhos
- Valores: "R$ 1.464,02" (espa√ßo ap√≥s R$)

GERAR OR√áAMENTO PROFISSIONAL:`;
}

function promptGenerico(contexto) {
  return `OR√áAMENTO CVC ITAQUA v8.3

Gere um or√ßamento completo e formatado para:

DADOS DA SOLICITA√á√ÉO:
- Tipos: ${contexto.tipos}
- Destino: ${contexto.destino}
- Passageiros: ${contexto.adultos} adulto(s)${contexto.criancas > 0 ? `, ${contexto.criancas} crian√ßa(s)` : ''}
${contexto.observacoes ? `- Observa√ß√µes: ${contexto.observacoes}` : ''}

${contexto.textoColado ? `INFORMA√á√ïES COMPLEMENTARES:
${contexto.textoColado}` : ''}

FORMATO OBRIGAT√ìRIO:
- Use emojis para destacar se√ß√µes (üí∞ para pre√ßos, ‚úàÔ∏è para voos, üè® para hot√©is)
- Inclua valores em R$ com formata√ß√£o brasileira
- Adicione informa√ß√µes sobre bagagem e parcelamento
- Mantenha linguagem profissional e atrativa

Gere o or√ßamento completo e formatado:`;
}

// ================================================================================
// üîß FUN√á√ïES DE SUPORTE - IMPLEMENTA√á√ÉO M√çNIMA
// ================================================================================

function gerarPromptFallback(formData) {
  return `OR√áAMENTO CVC ITAQUA - MODO B√ÅSICO

Destino: ${formData.destino || 'N√£o informado'}
Passageiros: ${formData.adultos || 1} adulto(s)
Tipos solicitados: ${formData.tipos?.join(', ') || 'Geral'}

${formData.observacoes ? `Observa√ß√µes: ${formData.observacoes}` : ''}

Gere um or√ßamento profissional baseado nestes dados.`;
}

function gerarPromptDicasDestino(destino) {
  return `DICAS DE VIAGEM CVC ITAQUA - ${destino.toUpperCase()}

Forne√ßa dicas pr√°ticas de viagem para ${destino} incluindo:
- Melhor √©poca para visitar
- O que levar
- Pontos tur√≠sticos principais
- Or√ßamento estimado di√°rio
- Documenta√ß√£o necess√°ria`;
}

function gerarPromptRankingHoteis(destino) {
  return `RANKING DE HOT√âIS CVC ITAQUA - ${destino.toUpperCase()}

Crie um ranking dos melhores hot√©is em ${destino} com:
- Top 5 hot√©is recomendados
- Faixa de pre√ßo por noite
- Principais caracter√≠sticas
- Localiza√ß√£o
- Classifica√ß√£o por estrelas`;
}

function gerarPromptAnaliseRelatorio(dados) {
  return `AN√ÅLISE DE RELAT√ìRIO CVC ITAQUA

Analise os dados fornecidos e gere um relat√≥rio com:
- Resumo executivo
- Principais achados
- Recomenda√ß√µes
- Pr√≥ximos passos`;
}

function ajustarPromptParaModelo(prompt, modelo) {
  console.log(`üîß Ajustando prompt para modelo: ${modelo}`);
  return prompt; // Implementa√ß√£o b√°sica - apenas retorna o prompt
}

function validarPrompt(prompt, tipoDetectado) {
  const validacao = {
    valido: true,
    problemas: [],
    sugestoes: []
  };
  
  if (!prompt || prompt.length < 10) {
    validacao.valido = false;
    validacao.problemas.push('Prompt muito curto');
  }
  
  return validacao;
}

// ================================================================================
// üöÄ EXPORTA√á√ÉO ES6 CORRIGIDA E COMPLETA
// ================================================================================

console.log("‚úÖ Prompts v8.3 carregado - SINTAXE EMERGENCIAL CORRIGIDA");

export {
  gerarPromptOtimizado,
  selecionarPromptPorTipo,
  gerarPromptDicasDestino,
  gerarPromptRankingHoteis,
  gerarPromptAnaliseRelatorio,
  ajustarPromptParaModelo,
  validarPrompt
};

export default {
  gerarPromptOtimizado,
  selecionarPromptPorTipo,
  gerarPromptDicasDestino,
  gerarPromptRankingHoteis,
  gerarPromptAnaliseRelatorio,
  ajustarPromptParaModelo,
  validarPrompt
};

console.log("üöÄ Sistema de Prompts v8.3 - EMERGENCIAL FUNCIONAL!");
