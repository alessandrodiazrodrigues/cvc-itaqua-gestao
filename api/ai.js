// üöÄ api/ai.js - v10.0 - INTEGRA√á√ÉO CORRIGIDA COM IA-CLIENT
// CORRE√á√ÉO: Importa√ß√£o e uso correto do m√≥dulo ia-client.js
// MANTER: An√°lise b√°sica atual (ser√° evolu√≠da depois)

console.log("üöÄ CVC ITAQUA API v10.0 - IA REAL INTEGRADA E CORRIGIDA");

export default async function handler(req, res) {
    const inicio = Date.now();
    console.log(`üìä M√©todo: ${req.method} | Timestamp: ${new Date().toISOString()}`);

    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
    res.setHeader('X-Powered-By', 'CVC-Itaqua-AI-v10.0-Corrigido');

    if (req.method === 'OPTIONS') return res.status(200).end();
    if (req.method !== 'POST') {
        return res.status(405).json({ 
            success: false, 
            error: 'M√©todo n√£o permitido',
            versao: '10.0-corrigido'
        });
    }

    try {
        // ================================================================================
        // üì¶ CARREGAMENTO DO IA-CLIENT COM CORRE√á√ÉO
        // ================================================================================
        
        console.log("üì¶ Carregando m√≥dulo ia-client...");
        
        const iaClientModule = await import('./modules/ia-client.js');
        
        // Extrair fun√ß√µes corretamente (suporta tanto named quanto default export)
        const chamarIASegura = iaClientModule.chamarIASegura || iaClientModule.default?.chamarIASegura;
        const selecionarModelo = iaClientModule.selecionarModelo || iaClientModule.default?.selecionarModelo;
        const obterInformacoesUso = iaClientModule.obterInformacoesUso || iaClientModule.default?.obterInformacoesUso;
        
        console.log("‚úÖ M√≥dulo ia-client carregado com sucesso");
        console.log("ü§ñ Verificando disponibilidade de fun√ß√µes...");
        console.log(`   - chamarIASegura: ${chamarIASegura ? '‚úÖ' : '‚ùå'}`);
        console.log(`   - selecionarModelo: ${selecionarModelo ? '‚úÖ' : '‚ùå'}`);
        console.log(`   - obterInformacoesUso: ${obterInformacoesUso ? '‚úÖ' : '‚ùå'}`);

        // Verificar se IA real est√° dispon√≠vel
        const iaRealDisponivel = !!chamarIASegura && !!process.env.OPENAI_API_KEY;

        console.log(`üéØ IA Real dispon√≠vel: ${iaRealDisponivel ? 'SIM ‚úÖ' : 'N√ÉO ‚ùå'}`);
        console.log(`üîë OpenAI API Key: ${process.env.OPENAI_API_KEY ? 'CONFIGURADA ‚úÖ' : 'AUSENTE ‚ùå'}`);
        console.log(`üîë Anthropic API Key: ${process.env.ANTHROPIC_API_KEY ? 'CONFIGURADA ‚úÖ' : 'AUSENTE ‚ùå'}`);

        // ================================================================================
        // üîß NORMALIZA√á√ÉO B√ÅSICA DE DADOS
        // ================================================================================
        
        const formData = req.body.formData || req.body;
        const tipo = req.body.tipo || 'orcamento';
        
        // Garantir dados b√°sicos
        if (!formData.tipos || !Array.isArray(formData.tipos) || formData.tipos.length === 0) {
            formData.tipos = ['A√©reo Nacional'];
        }
        formData.observacoes = formData.observacoes || '';
        formData.destino = formData.destino || '';
        formData.adultos = formData.adultos || 1;
        formData.criancas = formData.criancas || 0;

        console.log(`üéØ Processando tipo: ${tipo}`);
        console.log(`üìä Dados recebidos:`, {
            tipos: formData.tipos,
            destino: formData.destino,
            adultos: formData.adultos,
            criancas: formData.criancas,
            temObservacoes: !!formData.observacoes,
            temImagem: !!formData.imagemBase64
        });

        // ================================================================================
        // üéØ ORQUESTRA√á√ÉO COM IA REAL
        // ================================================================================
        
        let resultado;

        switch (tipo) {
            case 'orcamento':
                resultado = await orquestrarOrcamentoComIAReal(
                    formData, 
                    { chamarIASegura, selecionarModelo, obterInformacoesUso },
                    iaRealDisponivel
                );
                break;
            case 'ranking':
                resultado = await orquestrarRankingSimples(formData);
                break;
            case 'dicas':
                resultado = await orquestrarDicasSimples(formData);
                break;
            default:
                throw new Error(`Tipo de opera√ß√£o n√£o suportado: ${tipo}`);
        }

        // ================================================================================
        // üìä RESPOSTA FINAL
        // ================================================================================
        
        const tempoTotal = Date.now() - inicio;
        console.log(`‚úÖ Processamento conclu√≠do em ${tempoTotal}ms`);

        return res.status(200).json({
            success: true,
            result: resultado.conteudo,
            versao: '10.0-ia-real-corrigida',
            timestamp: new Date().toISOString(),
            debug: {
                tempoProcessamento: `${tempoTotal}ms`,
                iaRealUsada: resultado.debug?.iaRealUsada || false,
                modeloUsado: resultado.debug?.modeloUsado || 'nao-informado',
                tipoAnalise: resultado.debug?.tipoAnalise || 'basica',
                ...resultado.debug
            }
        });

    } catch (error) {
        const tempoTotal = Date.now() - inicio;
        console.error("‚ùå Erro fatal:", error);
        
        return res.status(500).json({
            success: false,
            error: error.message,
            versao: '10.0-erro',
            timestamp: new Date().toISOString(),
            debug: {
                tempoProcessamento: `${tempoTotal}ms`,
                errorStack: error.stack?.split('\n').slice(0, 4),
                tipoErro: error.name || 'erro_processamento'
            }
        });
    }
}

// ================================================================================
// üéØ ORQUESTRA√á√ÉO DE OR√áAMENTO COM IA REAL (CORRIGIDA)
// ================================================================================

async function orquestrarOrcamentoComIAReal(formData, iaFunctions, iaRealDisponivel) {
    console.log("üéØ Orquestrando or√ßamento com IA REAL...");
    console.log(`ü§ñ IA Real dispon√≠vel: ${iaRealDisponivel ? 'SIM' : 'N√ÉO'}`);

    const { chamarIASegura, selecionarModelo, obterInformacoesUso } = iaFunctions;

    try {
        // ETAPA 1: AN√ÅLISE B√ÅSICA (tempor√°ria - ser√° substitu√≠da por analysis.js)
        console.log("üìä ETAPA 1: An√°lise b√°sica tempor√°ria...");
        const analise = analisarTextoBasicoTemporario(formData);
        console.log(`‚úÖ An√°lise conclu√≠da:`, {
            tipo: analise.tipoDetectado,
            complexidade: analise.complexidade,
            confianca: analise.confiancaDeteccao
        });

        // ETAPA 2: PROMPT B√ÅSICO (tempor√°rio - ser√° substitu√≠do por prompts.js)
        console.log("üìã ETAPA 2: Gera√ß√£o de prompt b√°sico...");
        const prompt = gerarPromptBasicoTemporario(formData, analise);
        console.log(`‚úÖ Prompt gerado: ${prompt.length} caracteres`);

        // ETAPA 3: IA REAL - CHAMADA CORRIGIDA!
        console.log("ü§ñ ETAPA 3: Chamando IA REAL via ia-client...");
        
        let respostaIA;
        let iaRealUsada = false;
        let modeloUsado = 'nenhum';

        if (iaRealDisponivel) {
            try {
                // Selecionar modelo usando a fun√ß√£o do ia-client
                let modeloInfo;
                if (selecionarModelo) {
                    console.log("üéØ Usando selecionarModelo do ia-client...");
                    modeloInfo = selecionarModelo(!!formData.imagemBase64, analise.complexidade);
                } else {
                    console.log("üéØ Usando sele√ß√£o b√°sica de modelo...");
                    modeloInfo = selecionarModeloBasico(formData, analise);
                }
                
                console.log(`üéØ Modelo selecionado: ${modeloInfo.modelo}`);
                console.log(`üéØ Fallbacks: ${modeloInfo.fallback?.join(', ') || 'nenhum'}`);

                // CHAMADA CORRIGIDA - Usar a fun√ß√£o extra√≠da
                console.log("üöÄ Chamando IA real...");
                respostaIA = await chamarIASegura(
                    prompt, 
                    !!formData.imagemBase64, 
                    formData.imagemBase64 || null, 
                    modeloInfo.modelo, 
                    modeloInfo.fallback || []
                );
                
                iaRealUsada = true;
                modeloUsado = respostaIA?.modelo_usado || modeloInfo.modelo;
                
                console.log("‚úÖ IA REAL respondeu com sucesso!");
                console.log(`üéØ Modelo usado: ${modeloUsado}`);
                console.log(`üìä Resposta: ${respostaIA?.content?.length || 0} caracteres`);
                
                // Obter informa√ß√µes de uso se dispon√≠vel
                if (obterInformacoesUso && respostaIA) {
                    const infoUso = obterInformacoesUso(respostaIA);
                    console.log(`üìä Tokens usados: ${infoUso.tokens_total}`);
                }
                
            } catch (iaError) {
                console.error("‚ùå IA REAL falhou:", iaError.message);
                throw new Error(`IA Real falhou: ${iaError.message}`);
            }
        } else {
            // SE IA N√ÉO DISPON√çVEL, FALHAR EXPLICITAMENTE
            const motivoIndisponivel = !chamarIASegura ? 
                "Fun√ß√£o chamarIASegura n√£o encontrada no m√≥dulo ia-client" : 
                "OPENAI_API_KEY n√£o configurada";
                
            throw new Error(`IA Real indispon√≠vel: ${motivoIndisponivel}`);
        }

        // ETAPA 4: PROCESSAMENTO B√ÅSICO (tempor√°rio - ser√° substitu√≠do por processing.js)
        console.log("üé® ETAPA 4: Processamento b√°sico tempor√°rio...");
        const conteudoFinal = processarRespostaBasicoTemporario(respostaIA.content, analise, formData);

        return {
            conteudo: conteudoFinal,
            debug: {
                fluxoExecutado: 'An√°lise-B√°sica ‚Üí Prompt-B√°sico ‚Üí IA-REAL ‚Üí Processamento-B√°sico',
                iaRealUsada: iaRealUsada,
                modeloUsado: modeloUsado,
                tipoAnalise: analise.tipoDetectado,
                complexidade: analise.complexidade,
                promptLength: prompt.length,
                responseLength: respostaIA?.content?.length || 0,
                tokens: respostaIA?.usage?.total_tokens || 0
            }
        };

    } catch (error) {
        console.error("‚ùå Erro na orquestra√ß√£o com IA real:", error);
        throw new Error(`Falha na orquestra√ß√£o: ${error.message}`);
    }
}

// ================================================================================
// üîß FUN√á√ïES B√ÅSICAS TEMPOR√ÅRIAS (ser√£o substitu√≠das pelos m√≥dulos)
// ================================================================================

function analisarTextoBasicoTemporario(formData) {
    const texto = (formData.observacoes || '').toLowerCase();
    const destino = (formData.destino || '').toLowerCase();
    
    let tipoDetectado = 'generico';
    let complexidade = 'media';
    
    // Detec√ß√£o melhorada baseada em padr√µes
    if (texto.includes('multitrecho') || texto.includes('m√∫ltiplos') || 
        texto.includes('trecho 1') || texto.includes('trecho 2')) {
        tipoDetectado = 'multitrecho';
        complexidade = 'alta';
    } else if (texto.includes('iberia') || texto.includes('tap') || texto.includes('lufthansa')) {
        tipoDetectado = 'aereo_internacional';
        complexidade = texto.includes('trecho') ? 'alta' : 'media';
    } else if (texto.includes('cruzeiro') || texto.includes('navio') || texto.includes('cabine')) {
        tipoDetectado = 'cruzeiro';
        complexidade = 'media';
    } else if (texto.includes('hotel') || texto.includes('hospedagem') || 
               texto.includes('resort') || texto.includes('pousada')) {
        tipoDetectado = 'hotel';
        complexidade = 'baixa';
    } else if (texto.includes('pacote') || (texto.includes('hotel') && texto.includes('voo'))) {
        tipoDetectado = 'pacote';
        complexidade = 'media';
    } else if (formData.tipos?.includes('A√©reo Internacional')) {
        tipoDetectado = 'aereo_internacional';
        complexidade = 'media';
    } else if (formData.tipos?.includes('A√©reo Nacional')) {
        tipoDetectado = 'aereo_nacional';
        complexidade = 'baixa';
    }
    
    // Ajustar complexidade baseado em outros fatores
    if (texto.length > 1000) complexidade = 'alta';
    if (formData.imagemBase64) complexidade = 'media';
    
    return {
        tipoDetectado,
        complexidade,
        confiancaDeteccao: texto.length > 100 ? 0.8 : 0.6
    };
}

function gerarPromptBasicoTemporario(formData, analise) {
    const tipoViagem = analise.tipoDetectado.replace(/_/g, ' ').toUpperCase();
    
    return `Voc√™ √© um consultor especializado da CVC Itaqua. Analise CUIDADOSAMENTE as informa√ß√µes fornecidas e gere um or√ßamento profissional baseado nos DADOS REAIS.

üéØ TIPO DE VIAGEM DETECTADO: ${tipoViagem}

üìã INFORMA√á√ïES DO CLIENTE:
- Tipos solicitados: ${formData.tipos?.join(', ') || 'N√£o informado'}
- Destino: ${formData.destino || 'N√£o informado'}
- Adultos: ${formData.adultos || 1}
- Crian√ßas: ${formData.criancas || 0}

üìä DADOS DETALHADOS FORNECIDOS:
${formData.observacoes || 'Nenhuma informa√ß√£o adicional fornecida'}

‚öôÔ∏è AN√ÅLISE AUTOM√ÅTICA:
- Tipo detectado: ${analise.tipoDetectado}
- Complexidade: ${analise.complexidade}
- Confian√ßa: ${(analise.confiancaDeteccao * 100).toFixed(0)}%

üìå INSTRU√á√ïES CR√çTICAS:
1. USE APENAS OS DADOS REAIS fornecidos nas informa√ß√µes detalhadas
2. Se h√° companhias a√©reas mencionadas (Iberia, TAP, LATAM, GOL, Azul), USE-AS EXATAMENTE
3. Se h√° pre√ßos mencionados (R$ valores), USE-OS EXATAMENTE como base
4. Se h√° c√≥digos de aeroportos (GRU, FCO, CDG, MAD), USE-OS CORRETAMENTE
5. Se h√° datas espec√≠ficas mencionadas, USE-AS PRECISAMENTE
6. Para multitrechos, organize CLARAMENTE por segmentos (TRECHO 1, TRECHO 2, etc.)
7. Se h√° informa√ß√µes de hot√©is, USE nome, endere√ßo e categoria EXATOS

‚ú® FORMATO OBRIGAT√ìRIO DO OR√áAMENTO:
- T√≠tulo claro com tipo de viagem
- Use emojis profissionais (‚úàÔ∏è üè® üö¢ üìÖ üí∞ ‚úÖ)
- Valores sempre em R$ (reais brasileiros)
- Especifique TODAS as condi√ß√µes de pagamento mencionadas
- Detalhe informa√ß√µes sobre bagagem quando dispon√≠vel
- Inclua pol√≠ticas de cancelamento se mencionadas
- Mantenha tom profissional mas acolhedor

‚ö†Ô∏è IMPORTANTE: 
- Analise TODO o conte√∫do fornecido minuciosamente
- Extraia e use TODAS as informa√ß√µes espec√≠ficas dispon√≠veis
- N√ÉO invente dados gen√©ricos se h√° informa√ß√µes espec√≠ficas
- Se algo n√£o est√° claro, indique que precisa de confirma√ß√£o
- Para valores n√£o mencionados, indique "A confirmar" ou "Sob consulta"

Agora, gere o or√ßamento completo e detalhado baseado EXCLUSIVAMENTE nas informa√ß√µes reais fornecidas:`;
}

function selecionarModeloBasico(formData, analise) {
    // Fallback caso a fun√ß√£o do ia-client n√£o esteja dispon√≠vel
    if (formData.imagemBase64) {
        return { 
            modelo: 'gpt-4o', 
            fallback: ['gpt-4o-mini'] 
        };
    }
    
    switch (analise.complexidade) {
        case 'alta':
            return { 
                modelo: 'gpt-4o', 
                fallback: ['gpt-4o-mini'] 
            };
        case 'media':
            return { 
                modelo: 'gpt-4o-mini', 
                fallback: ['gpt-4o'] 
            };
        case 'baixa':
        default:
            return { 
                modelo: 'gpt-4o-mini', 
                fallback: [] 
            };
    }
}

function processarRespostaBasicoTemporario(conteudo, analise, formData) {
    if (!conteudo) return "‚ùå Erro: Resposta da IA vazia";
    
    // Processamento b√°sico - limpeza e formata√ß√£o
    let processado = conteudo.trim();
    
    // Adicionar rodap√© com informa√ß√µes do sistema
    processado += `\n\n---\n`;
    processado += `üíº *CVC Itaqua - Ag√™ncia Especializada*\n`;
    processado += `üìç Rua Jo√£o Tibiri√ß√° Ramos, 17 - Itaquaquecetuba/SP\n`;
    processado += `üìû Contato: (11) 9.5396-7741\n`;
    processado += `‚ú® Sistema v10.0 - IA Real Integrada`;
    
    // Se h√° observa√ß√µes muito longas que n√£o foram inclu√≠das, adicionar nota
    if (formData.observacoes && formData.observacoes.length > 1000 && 
        !processado.includes(formData.observacoes.substring(0, 50))) {
        processado += `\n\nüìã *Observa√ß√£o:* Or√ßamento baseado em ${formData.observacoes.length} caracteres de dados fornecidos.`;
    }
    
    return processado;
}

// ================================================================================
// üè® FUN√á√ïES SIMPLES PARA RANKING E DICAS (tempor√°rias)
// ================================================================================

async function orquestrarRankingSimples(formData) {
    const destino = formData.destino || 'seu destino';
    
    const conteudo = `üè® *RANKING DE HOT√âIS - ${destino.toUpperCase()}*

ü•á *1¬∫ LUGAR - Hotel Premium Excellence*
‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê 5 estrelas | Centro da cidade
üí∞ Di√°ria a partir de R$ 450,00 | Caf√© da manh√£ incluso
‚úÖ Piscina aquecida, Spa completo, Academia 24h
üìç Localiza√ß√£o privilegiada com vista panor√¢mica

ü•à *2¬∫ LUGAR - Resort Familiar Paradise*  
‚≠ê‚≠ê‚≠ê‚≠ê 4 estrelas | Frente para o mar
üí∞ Di√°ria a partir de R$ 320,00 | All inclusive dispon√≠vel
‚úÖ Kids Club, 3 Piscinas, Entretenimento di√°rio
üèñÔ∏è Acesso direto √† praia privativa

ü•â *3¬∫ LUGAR - Hotel Executivo Business*
‚≠ê‚≠ê‚≠ê‚≠ê 4 estrelas | Distrito empresarial  
üí∞ Di√°ria a partir de R$ 280,00 | Business center 24h
‚úÖ Salas de reuni√£o equipadas, Wi-Fi premium, Transfer aeroporto
üè¢ Ideal para viagens corporativas

üìä *4¬∫ LUGAR - Pousada Charme Local*
‚≠ê‚≠ê‚≠ê 3 estrelas | Centro hist√≥rico
üí∞ Di√°ria a partir de R$ 180,00 | Caf√© colonial
‚úÖ Decora√ß√£o regional, Ambiente acolhedor
üé® Experi√™ncia cultural aut√™ntica

üåü *5¬∫ LUGAR - Hostel Econ√¥mico Central*
‚≠ê‚≠ê 2 estrelas | √Årea central
üí∞ Di√°ria a partir de R$ 80,00 | Cozinha compartilhada
‚úÖ Wi-Fi gr√°tis, Lockers individuais
üë• Ideal para mochileiros e jovens

---
üíº *CVC Itaqua - Sua melhor escolha em hospedagem*
üìû Reservas: (11) 9.5396-7741
‚ú® Sistema v10.0 - Rankings atualizados`;

    return {
        conteudo,
        debug: {
            tipo: 'ranking_hoteis',
            iaRealUsada: false,
            metodo: 'template_basico'
        }
    };
}

async function orquestrarDicasSimples(formData) {
    const destino = formData.destino || 'seu destino';
    
    const conteudo = `üí° *DICAS ESSENCIAIS DE VIAGEM - ${destino.toUpperCase()}*

üìÖ *MELHOR √âPOCA PARA VIAJAR*
‚Ä¢ ‚òÄÔ∏è Alta temporada: Dezembro a Mar√ßo (pre√ßos mais altos)
‚Ä¢ üå§Ô∏è M√©dia temporada: Abril a Junho (clima agrad√°vel)
‚Ä¢ üí∞ Baixa temporada: Maio e Setembro (melhores pre√ßos)
‚Ä¢ üåßÔ∏è Evitar: Per√≠odo de chuvas intensas

üéí *O QUE LEVAR NA MALA*
‚Ä¢ üëï Roupas leves e confort√°veis
‚Ä¢ üß¥ Protetor solar FPS 50+ e repelente
‚Ä¢ üëü Cal√ßados confort√°veis para caminhada
‚Ä¢ üíä Kit farm√°cia pessoal
‚Ä¢ üîå Adaptador universal e carregador port√°til
‚Ä¢ üì∑ C√¢mera ou celular com boa mem√≥ria

üó∫Ô∏è *PRINCIPAIS ATRA√á√ïES*
‚Ä¢ üèõÔ∏è Centro hist√≥rico e museus
‚Ä¢ üèñÔ∏è Praias e paisagens naturais
‚Ä¢ üõçÔ∏è Mercados e feiras locais
‚Ä¢ üç¥ Restaurantes t√≠picos
‚Ä¢ üé≠ Eventos culturais e festivais

üí∞ *OR√áAMENTO DI√ÅRIO SUGERIDO*
‚Ä¢ üíµ Econ√¥mico: R$ 150-250/dia
‚Ä¢ üí≥ Intermedi√°rio: R$ 300-500/dia
‚Ä¢ üíé Premium: R$ 600+ /dia

üöñ *TRANSPORTE LOCAL*
‚Ä¢ üöå Transporte p√∫blico: Mais econ√¥mico
‚Ä¢ üöó Aluguel de carro: Maior liberdade
‚Ä¢ üì± Apps de transporte: Praticidade
‚Ä¢ üö∂ A p√©: Melhor para conhecer o centro

üçΩÔ∏è *GASTRONOMIA*
‚Ä¢ ü•ò Pratos t√≠picos imperd√≠veis
‚Ä¢ üíß Beba sempre √°gua mineral
‚Ä¢ üçπ Cuidado com gelo em bebidas
‚Ä¢ ü•ó Prefira alimentos cozidos

üì± *APLICATIVOS √öTEIS*
‚Ä¢ üó∫Ô∏è Google Maps (offline)
‚Ä¢ üåê Google Tradutor
‚Ä¢ üí± Conversor de moedas
‚Ä¢ ‚òÅÔ∏è Previs√£o do tempo
‚Ä¢ üì∏ Instagram para inspira√ß√µes

‚ö†Ô∏è *CUIDADOS IMPORTANTES*
‚Ä¢ üìÑ Documentos sempre em local seguro
‚Ä¢ üí≥ Cart√µes em locais separados
‚Ä¢ üìû Tenha contatos de emerg√™ncia
‚Ä¢ üè• Seguro viagem √© fundamental
‚Ä¢ üì∏ Fotos dos documentos no celular

---
üíº *CVC Itaqua - Transformando viagens em experi√™ncias*
üìû Consultoria: (11) 9.5396-7741
‚ú® Sistema v10.0 - Dicas personalizadas`;

    return {
        conteudo,
        debug: {
            tipo: 'dicas_viagem',
            iaRealUsada: false,
            metodo: 'template_basico'
        }
    };
}

console.log("‚úÖ API v10.0 carregada - CORRE√á√ïES IMPLEMENTADAS!");
console.log("üéØ Importa√ß√£o do ia-client.js corrigida");
console.log("üìä Pronto para integra√ß√£o com analysis.js");
console.log("üöÄ Sistema funcionando com IA REAL!");
