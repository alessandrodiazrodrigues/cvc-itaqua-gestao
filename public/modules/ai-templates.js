// üìã ai-templates.js - M√≥dulo de Templates Espec√≠ficos
// Respons√°vel por aplicar templates otimizados baseados no tipo de conte√∫do detectado

console.log("üìã M√≥dulo de Templates carregado");

// ================================================================================
// üõ´ TEMPLATE IDA E VOLTA
// ================================================================================

function templateIdaVolta(formData, analise) {
  console.log("üõ´ Aplicando template Ida e Volta...");
  
  const tiposTexto = formData.tipos.join(", ");
  
  return `OR√áAMENTO CVC ITAQUA - IDA E VOLTA

TIPOS SELECIONADOS: ${tiposTexto}

DADOS DA VIAGEM:
${formData.observacoes}

${formData.textoColado ? `INFORMA√á√ïES ADICIONAIS:
${formData.textoColado}` : ''}

INSTRU√á√ïES ESPEC√çFICAS PARA IDA E VOLTA:
1. üîç ESTRUTURA OBRIGAT√ìRIA:
   - Se√ß√£o "‚úàÔ∏è VOO DE IDA" com data, hor√°rio e aeroportos
   - Se√ß√£o "‚úàÔ∏è VOO DE VOLTA" com data, hor√°rio e aeroportos
   - Separar claramente as duas se√ß√µes

2. üïê DETEC√á√ÉO DE DATAS:
   - Identificar automaticamente data de ida e volta
   - Se h√° duas datas diferentes, √© ida e volta
   - Exemplo: "17 de janeiro" (ida) e "23 de janeiro" (volta)

3. ‚úàÔ∏è AEROPORTOS:
   - Converter c√≥digos para nomes completos
   - Ida: Origem ‚Üí Destino (com escalas se houver)
   - Volta: Destino ‚Üí Origem (com escalas se houver)

4. üí∞ PRE√áOS:
   - Total por pessoa
   - Total fam√≠lia (se m√∫ltiplos passageiros)
   - Usar apenas valores reais fornecidos

5. üßπ FORMATA√á√ÉO:
   - Sem cabe√ßalhos t√©cnicos
   - Pronto para WhatsApp
   - Emojis apropriados

GERE O OR√áAMENTO IDA E VOLTA:`;
}

// ================================================================================
// üî¢ TEMPLATE M√öLTIPLAS OP√á√ïES
// ================================================================================

function templateMultiplasOpcoes(formData, analise) {
  console.log("üî¢ Aplicando template M√∫ltiplas Op√ß√µes...");
  
  const tiposTexto = formData.tipos.join(", ");
  const numeroOpcoes = analise.numeroOpcoesDetectadas || 2;
  
  return `OR√áAMENTO CVC ITAQUA - M√öLTIPLAS OP√á√ïES

TIPOS SELECIONADOS: ${tiposTexto}

DADOS DA VIAGEM:
${formData.observacoes}

${formData.textoColado ? `INFORMA√á√ïES ADICIONAIS:
${formData.textoColado}` : ''}

INSTRU√á√ïES ESPEC√çFICAS PARA M√öLTIPLAS OP√á√ïES:
1. üî¢ NUMERA√á√ÉO CLARA:
   - "OP√á√ÉO 1:", "OP√á√ÉO 2:", etc.
   - Separar cada op√ß√£o visualmente
   - M√°ximo ${numeroOpcoes} op√ß√µes detectadas

2. ‚úàÔ∏è PARA CADA OP√á√ÉO:
   - Aeroportos e hor√°rios espec√≠ficos
   - Companhia a√©rea
   - Escalas (se houver)
   - Pre√ßo individual

3. üè® HOT√âIS (se aplic√°vel):
   - Nome exato do hotel
   - Categoria/Estrelas
   - Localiza√ß√£o
   - Di√°rias inclu√≠das

4. üí∞ COMPARA√á√ÉO DE PRE√áOS:
   - Apresentar op√ß√µes do menor para maior pre√ßo
   - Total por pessoa para cada op√ß√£o
   - Destacar melhor custo-benef√≠cio

5. üéØ RECOMENDA√á√ÉO:
   - Sugerir a melhor op√ß√£o e por qu√™
   - Considerar pre√ßo, hor√°rio, aeroportos

GERE AS M√öLTIPLAS OP√á√ïES ORGANIZADAS:`;
}

// ================================================================================
// üö¢ TEMPLATE CRUZEIRO POR CABINE
// ================================================================================

function templateCruzeiro(formData, analise) {
  console.log("üö¢ Aplicando template Cruzeiro por Cabine...");
  
  const tiposTexto = formData.tipos.join(", ");
  
  return `OR√áAMENTO CVC ITAQUA - CRUZEIRO POR CABINE

TIPOS SELECIONADOS: ${tiposTexto}

DADOS DA VIAGEM:
${formData.observacoes}

${formData.textoColado ? `INFORMA√á√ïES ADICIONAIS:
${formData.textoColado}` : ''}

INSTRU√á√ïES ESPEC√çFICAS PARA CRUZEIROS:
1. üõ≥Ô∏è FOCO EM CABINES (N√ÉO POR PASSAGEIRO):
   - "Cabine Interna - R$ 5.018,00"
   - "Cabine Externa - R$ 6.250,00"
   - "Cabine com Varanda - R$ 8.150,00"
   - "Su√≠te - R$ 12.800,00"

2. üóìÔ∏è INFORMA√á√ïES DO CRUZEIRO:
   - Navio e companhia
   - Roteiro completo
   - Data de embarque e desembarque
   - Dura√ß√£o (X noites)

3. üèñÔ∏è DESTINOS:
   - Portos de parada
   - Tempo em cada destino
   - Atividades inclu√≠das

4. üçΩÔ∏è INCLUS√ïES:
   - Todas as refei√ß√µes
   - Entretenimento a bordo
   - Taxa de servi√ßo
   - O que N√ÉO est√° inclu√≠do

5. üí∞ PRE√áOS POR CABINE:
   - Valor total da cabine (para 2 pessoas)
   - Taxas portu√°rias separadas
   - Op√ß√µes de parcelamento

6. ‚ö†Ô∏è OBSERVA√á√ïES IMPORTANTES:
   - Documenta√ß√£o necess√°ria
   - Pol√≠ticas de cancelamento
   - Datas limite para reserva

GERE O OR√áAMENTO DE CRUZEIRO POR CABINE:`;
}

// ================================================================================
// üè® TEMPLATE HOTEL MELHORADO
// ================================================================================

function templateHotel(formData, analise) {
  console.log("üè® Aplicando template Hotel Melhorado...");
  
  const tiposTexto = formData.tipos.join(", ");
  
  return `OR√áAMENTO CVC ITAQUA - HOT√âIS DETALHADOS

TIPOS SELECIONADOS: ${tiposTexto}

DADOS DA VIAGEM:
${formData.observacoes}

${formData.textoColado ? `INFORMA√á√ïES ADICIONAIS:
${formData.textoColado}` : ''}

INSTRU√á√ïES ESPEC√çFICAS PARA HOT√âIS:
1. üè® NOME EXATO E CATEGORIA:
   - Nome completo do hotel (sem abrevia√ß√µes)
   - Estrelas ou categoria (‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ)
   - Rede hoteleira (se aplic√°vel)

2. üìç LOCALIZA√á√ÉO PRECISA:
   - Bairro ou regi√£o espec√≠fica
   - Dist√¢ncia de pontos tur√≠sticos principais
   - Acesso a transporte p√∫blico

3. üõèÔ∏è DETALHES DA ACOMODA√á√ÉO:
   - Tipo de quarto reservado
   - N√∫mero de h√≥spedes
   - Regime alimentar (caf√©, meia pens√£o, all inclusive)

4. üóìÔ∏è PER√çODO E DI√ÅRIAS:
   - Check-in e check-out
   - N√∫mero exato de di√°rias
   - Datas em formato brasileiro

5. üåü DIFERENCIAIS DO HOTEL:
   - Piscina, spa, academia
   - Wi-Fi, ar condicionado
   - Localiza√ß√£o privilegiada
   - Comodidades especiais

6. üí∞ PRE√áOS DETALHADOS:
   - Valor por pessoa (se aplic√°vel)
   - Valor total da reserva
   - Taxas e impostos inclusos
   - Op√ß√µes de parcelamento

7. ‚úÖ INCLUS√ïES:
   - O que est√° inclu√≠do na tarifa
   - Caf√© da manh√£, transfers, etc.
   - Pol√≠ticas de cancelamento

GERE O OR√áAMENTO DE HOTEL DETALHADO:`;
}

// ================================================================================
// üéØ SELETOR AUTOM√ÅTICO DE TEMPLATE
// ================================================================================

function selecionarTemplate(formData, analise) {
  console.log("üéØ Selecionando template apropriado...", analise);
  
  // 1. Prioridade para CRUZEIRO se detectado
  if (formData.tipos.some(tipo => tipo.toLowerCase().includes('cruzeiro'))) {
    console.log("üö¢ Template Cruzeiro selecionado");
    return templateCruzeiro(formData, analise);
  }
  
  // 2. Template IDA E VOLTA se detectado
  if (analise.isIdaVolta) {
    console.log("üõ´ Template Ida e Volta selecionado");
    return templateIdaVolta(formData, analise);
  }
  
  // 3. Template M√öLTIPLAS OP√á√ïES se detectado
  if (analise.temMultiplasOpcoes) {
    console.log("üî¢ Template M√∫ltiplas Op√ß√µes selecionado");
    return templateMultiplasOpcoes(formData, analise);
  }
  
  // 4. Template HOTEL se detectado
  if (formData.tipos.some(tipo => tipo.toLowerCase().includes('hotel'))) {
    console.log("üè® Template Hotel selecionado");
    return templateHotel(formData, analise);
  }
  
  // 5. Template padr√£o (IDA E VOLTA √© mais comum)
  console.log("üìã Template padr√£o (Ida e Volta) selecionado");
  return templateIdaVolta(formData, analise);
}

// ================================================================================
// üîß FUN√á√ÉO PRINCIPAL DE APLICA√á√ÉO DE TEMPLATE
// ================================================================================

function aplicarTemplate(formData, analise) {
  try {
    console.log("üîß Iniciando aplica√ß√£o de template...");
    
    if (!formData || !analise) {
      console.error("‚ùå Dados inv√°lidos para template");
      return null;
    }
    
    // Seleciona e aplica o template apropriado
    const prompt = selecionarTemplate(formData, analise);
    
    // Adiciona configura√ß√µes espec√≠ficas baseadas na an√°lise
    let promptFinal = prompt;
    
    // Adiciona instru√ß√µes de parcelamento se necess√°rio
    if (formData.parcelamento?.incluirParcelamento) {
      promptFinal += adicionarConfiguracaoParcelamento(formData);
    }
    
    console.log("‚úÖ Template aplicado com sucesso");
    console.log(`üìä Prompt final: ${promptFinal.length} caracteres`);
    
    return promptFinal;
    
  } catch (error) {
    console.error("‚ùå Erro ao aplicar template:", error);
    return null;
  }
}

// ================================================================================
// üí≥ CONFIGURA√á√ÉO DE PARCELAMENTO (REUTILIZADA)
// ================================================================================

function adicionarConfiguracaoParcelamento(formData) {
  if (!formData.parcelamento || !formData.parcelamento.incluirParcelamento) {
    return '\n\nPARCELAMENTO: N√£o incluir (exceto se expl√≠cito nas observa√ß√µes para A√©reo Facial)';
  }
  
  let configParcelamento = '\n\nPARCELAMENTO SOLICITADO:';
  
  if (formData.parcelamento.parcelas10x && formData.parcelamento.parcelas12x) {
    configParcelamento += '\n- Incluir op√ß√µes de 10x e 12x';
  } else if (formData.parcelamento.parcelas10x) {
    configParcelamento += '\n- Incluir op√ß√£o de 10x';
  } else if (formData.parcelamento.parcelas12x) {
    configParcelamento += '\n- Incluir op√ß√£o de 12x';
  }
  
  configParcelamento += '\n- Calcular valor das parcelas automaticamente';
  
  return configParcelamento;
}

// ================================================================================
// üìä ESTAT√çSTICAS E LOGS
// ================================================================================

function logEstatisticasTemplate(formData, analise, templateUsado) {
  console.log("üìä Estat√≠sticas do template:");
  console.log("- Tipos selecionados:", formData.tipos.join(', '));
  console.log("- Ida e volta:", analise.isIdaVolta ? 'Sim' : 'N√£o');
  console.log("- M√∫ltiplas op√ß√µes:", analise.temMultiplasOpcoes ? 'Sim' : 'N√£o');
  console.log("- Template usado:", templateUsado);
  console.log("- Parcelamento:", formData.parcelamento?.incluirParcelamento ? 'Sim' : 'N√£o');
}

// ================================================================================
// üì§ EXPORTA√á√ÉO COMPAT√çVEL COM SISTEMA CVC
// ================================================================================

// Compatibilidade com sistema de m√≥dulos existente
if (typeof window !== 'undefined') {
  // Browser environment - adiciona ao objeto global
  window.aplicarTemplate = aplicarTemplate;
  window.selecionarTemplate = selecionarTemplate;
  window.templateIdaVolta = templateIdaVolta;
  window.templateMultiplasOpcoes = templateMultiplasOpcoes;
  window.templateCruzeiro = templateCruzeiro;
  window.templateHotel = templateHotel;
}

// Exporta√ß√£o para sistemas que suportam modules
if (typeof module !== 'undefined' && module.exports) {
  module.exports = {
    aplicarTemplate,
    selecionarTemplate,
    templateIdaVolta,
    templateMultiplasOpcoes,
    templateCruzeiro,
    templateHotel,
    logEstatisticasTemplate
  };
}

console.log("‚úÖ M√≥dulo ai-templates.js carregado e pronto para uso");